#!/bin/bash
#====================================================
#	SCRIPT: SSLTLSSTUNNEL4 MANAGER
#   DATA ATT:   17/06/2021 
#	DESENVOLVIDO POR:	VAN_SSLSTUNNEL4
#	CONTATO :	http://t.me/crazy_vpn
#	CANAL 	van
#====================================================

echo -e "\033[1;33m- - - - -> \033[01;34mScript Configurar o servidor para usar SSL/TLS Stunnel4"
echo -e "\033[1;33m #################"
echo -e "\033[1;33m- - - - -> \033[01;34mScript Configure the server to use SSL / TLS Stunnel4"
echo -e "\033[1;33m #################"
echo -e "\033[1;31mC A N A L   VANDERLEI AC"
sleep 2

apt-get update -y
clear
yum update -y
apt-get install openssh-server -y
clear
apt-get install curl -y
clear
yum install openssh-server -y
clear
apt-get install openssh-client -y
clear
yum install openssh-client -y
clear
apt-get install stunnel4 -y
clear
yum install stunnel4 -y
clear
apt-get install stunnel -y
clear
yum install stunnel -y
clear

echo -e "\033[1;31mC A P I T U R A N D O  I P"
ip=$(curl https://api.ipify.org/)
echo $ip
clear

echo -e "\033[1;33m ######################################"
echo -e "\033[1;31mF I C A   A P E R T A N D O   E N T E R"
echo -e "\033[1;33m #################"
echo -e "\033[1;31mS T A R T  E N T E R"
echo -e "\033[1;33m ######################################"
sleep 1

echo -e "\033[1;33m ######################################"
echo -e "\033[1;31mG E R A N D O  C E R T I F I C A D O"
echo -e "\033[1;33m #################"
echo -e "\033[1;31mG E N E R A T I N G  C E R T I F I C A T E"
echo -e "\033[1;33m ######################################"
sleep 1
openssl genrsa 2048 > stunnel.key
openssl req -new -key stunnel.key -x509 -days 1000 -out stunnel.crt

echo -e "\033[1;33m ######################################"
echo -e "\033[1;31mC R I A N D O  U M A  N O V A  C O N F I G U R A C A O"
echo -e "\033[1;33m #################"
echo -e "\033[1;31mC R E A T I N G  A   N E W   CO N F I G U R A T I O N"
echo -e "\033[1;33m ######################################"
sleep 2
rm /etc/stunnel/stunnel.conf
clear
rm /etc/default/stunnel4
clear
cat stunnel.crt stunnel.key > stunnel.pem 
mv stunnel.pem /etc/stunnel/
clear
echo -e "\033[1;31mD I G I T E  A  P O R T A  Q U E  D E S E J A R"
echo -e "\033[1;31mP O R T  S S L"
read -p ": " port
clear

echo -e "\033[1;33m ######################################"
echo -e "\033[1;31mC O N F I G U R A N D O  STUNNEL.CONF"
echo -e "\033[1;33m #################"
echo -e "\033[1;31mC O N F I G U R I N G T H E  STUNNEL.CONF"
echo -e "\033[1;33m ######################################"
sleep 1

echo -e "\033[1;31m ###"
sleep 1
echo -e "\033[1;31m #########"
sleep 1
echo -e "\033[1;31m ################"
sleep 1
echo -e "\033[1;31m ########################"
sleep 1
echo -e "\033[1;31m ##################################"
sleep 1

echo "client = no " >> /etc/stunnel/stunnel.conf
echo "[ssh] " >> /etc/stunnel/stunnel.conf
echo "cert = /etc/stunnel/stunnel.pem " >> /etc/stunnel/stunnel.conf
echo "accept = $port " >> /etc/stunnel/stunnel.conf
echo "connect = 127.0.0.1:22" >> /etc/stunnel/stunnel.conf

echo -e "\033[1;33m ######################################"
echo -e "\033[1;31mC O N F I G U R A N D O  STUNNEL4"
echo -e "\033[1;33m ###################"
echo -e "\033[1;31mC O N F I G U R I N G  T H E  STUNNEL"
echo -e "\033[1;33m ######################################"
sleep 1

echo "ENABLED=1 " >> /etc/default/stunnel4
echo "FILES="/etc/stunnel/*.conf" " >> /etc/default/stunnel4
echo "OPTIONS="" " >> /etc/default/stunnel4
echo "PPP_RESTART=0" >> /etc/default/stunnel4

echo -e "\033[1;33m ######################################"
echo -e "\033[1;31mI N I C I A N D O  O  STUNNEL4"
echo -e "\033[1;33m ###################"
echo -e "\033[1;31mS T A R T I N G  T H E  STUNNEL4"
echo -e "\033[1;33m ######################################"
sleep 1

echo -e "\033[1;33m ######################################"
echo -e "\033[1;31m ##### V A I  O C O R R E  E R R O S  N O R M A I S AGUARDE...######"
echo -e "\033[1;33m ######################################"
sleep 1
stunnel
/usr/bin/stunnel &
service ssh start 1>/dev/null 2 /dev/null
/etc/init.d/ssh start 1>/dev/null 2 /dev/null
service sshd start 1>/dev/null 2 /dev/null
/etc/init.d/sshd start 1>/dev/null 2 /dev/null
service sshd restart 1>/dev/null 2 /dev/null
/etc/init.d/sshd restart 1>/dev/null 2 /dev/null
service ssh restart 1>/dev/null 2 /dev/null
/etc/init.d/ssh restart 1>/dev/null 2 /dev/null
service stunnel4 start 1>/dev/null 2 /dev/null
/etc/init.d/stunnel4 start 1>/dev/null 2 /dev/null
service stunnel4 restart 1>/dev/null 2 /dev/null
/etc/init.d/stunnel4 restart 1>/dev/null 2 /dev/null
systemctl start stunnel4 1>/dev/null 2 /dev/null
systemctl restart stunnel 1>/dev/null 2 /dev/null
clear

echo -e "\033[1;33m #######OCORREU UNS ERROS NORMAIS PRONTO###############"
sleep 2
echo -e "\033[1;33m ###########REINICIADO...###########"
clear

echo -e "\033[1;33m ######################################"
echo -e "\033[1;31mC O N F I G U R A D O  C O M  S U C E S S O  F A C A  O  T E S T E"
echo -e "\033[1;33m ###################"
echo -e "\033[1;31mS U C E S S  T E S T"
echo -e "\033[1;33m ######################################"
echo -e "\033[1;33m- - - - -> \033[01;34mSEU IP HOST:\033[0m $ip"
echo -e "\033[1;33m- - - - -> \033[01;34mPORT SSL:\033[0m $port"
sleep 1
echo -e "\033[1;31mSE NAO FUNCIONAR FAZ O COMANDO REBOOT"
sleep 2
echo -e "\033[1;33m- - ->>C A N A L \033[01;34mVANDERLEI AC"
echo -e "\033[1;33m- - ->>F E I T O  P O R \033[01;34mVANDERLEI AC"
sleep 1
fun_bar 'inst_pct'
[[ -f "/usr/sbin/ufw" ]] && ufw enable ; ufw allow 22/tcp ; ufw allow 20024/tcp ; ufw allow 443/tcp ; ufw allow 444/tcp ; ufw allow 80/tcp ; ufw allow 3128/tcp ; ufw allow 8799/tcp ; ufw allow 8080/tcp
clear
echo ""
echo "###########ADICIONANDO USUÁRIO NO SSH E NO SSL...############"
adduser 
sleep 3
echo "###########REINICIANDO SERVICOS DE VAN...###########"
service stunnel4 start
service stunnel4 restart
service ssh restart
echo ""
echo "ATÉ AQUI JA BASTA PORÉM VOU ADICIONAR MAIS SCRIPTS PARA TESTE"
tput setaf 7;tput setab 4;tput bold;printf '%30s%s%-15s\n' "Criar Usuário SSH";tput sgr0
echo ""
echo -ne "\033[1;32mNome do usuário:\033[1;37m ";read username
[[ -z $username ]] && {
	echo -e "\n${cor1}Nome de usuário vazio ou invalido!${scor}\n"
	exit 1
}
[[ "$(grep -wc $username /etc/passwd)" != '0' ]] && {
	echo -e "\n${cor1}Este usuário já existe. tente outro nome!${scor}\n"
	exit 1
}
[[ ${username} != ?(+|-)+([a-zA-Z0-9]) ]] && {
	echo -e "\n${cor1}Você digitou um nome de usuário inválido!${scor}"
	echo -e "${cor1}Não use espaços, acentos ou caracteres especiais!${scor}\n"
	exit 1
}
sizemin=$(echo ${#username})
[[ $sizemin -lt 2 ]] && {
	echo -e "\n${cor1}Você digitou um nome de usuário muito curto${scor}"
	echo -e "${cor1}use no mínimo dois caracteres!${scor}\n"
	exit 1
}
sizemax=$(echo ${#username})
[[ $sizemax -gt 10 ]] && {
	echo -e "\n${cor1}Você digitou um nome de usuário muito grande"
	echo -e "${cor1}use no máximo 10 caracteres!${scor}\n"
	exit 1
}
echo -ne "\033[1;32mSenha:\033[1;37m ";read password
[[ -z $password ]] && {
	echo -e "\n${cor1}Senha vazia ou invalida!${scor}\n"
	exit 1
}
sizepass=$(echo ${#password})
[[ $sizepass -lt 4 ]] && {
	echo -e "\n${cor1}Senha curta!, use no mínimo 4 caracteres${scor}\n"
	exit 1
}
echo -ne "\033[1;32mDias para expirar:\033[1;37m ";read dias
[[ -z $dias ]] && {
	echo -e "\n${cor1}Numero de dias vazio!${scor}\n"
	exit 1
}
[[ ${dias} != ?(+|-)+([0-9]) ]] && {
	echo -e "\n${cor1}Você digitou um número de dias inválido!${scor}\n"
	exit 1
}
[[ $dias -lt 1 ]] && {
	echo -e "\n${cor1}O número deve ser maior que zero!${scor}\n"
	exit 1
}
echo -ne "\033[1;32mLimite de conexões:\033[1;37m ";read sshlimiter
[[ -z $sshlimiter ]] && {
	echo -e "\n${cor1}Você deixou o limite de conexões vazio!${scor}\n"
	exit 1
}
[[ ${sshlimiter} != ?(+|-)+([0-9]) ]] && {
	echo -e "\n${cor1}Você digitou um número de conexões inválido!${scor}\n"
	exit 1
}
[[ $sshlimiter -lt 1 ]] && {
	echo -e "\n${cor1}Número de conexões simultâneas deve ser maior que zero!${scor}\n"
	exit 1
}
final=$(date "+%Y-%m-%d" -d "+$dias days")
gui=$(date "+%d/%m/%Y" -d "+$dias days")
pass=$(perl -e 'print crypt($ARGV[0], "password")' $password)
useradd -e $final -M -s /bin/false -p $pass $username >/dev/null 2>&1 &
echo "$password" >/etc/SSHPlus/senha/$username
echo "$username $sshlimiter" >>/root/usuarios.db
[[ -e /etc/openvpn/server.conf ]] && {
	echo -ne "\033[1;32mGerar Arquivo Ovpn \033[1;31m? \033[1;33m[s/n]:\033[1;37m "; read resp
	[[ "$resp" = @(s|S) ]] && {
		rm $username.zip $username.ovpn >/dev/null 2>&1
		echo -ne "\033[1;32mGerar Com usuário e Senha \033[1;31m? \033[1;33m[s/n]:\033[1;37m "
		read respost
		echo -ne "\033[1;32mModo Atual\033[1;37m: \033[1;31m(\033[1;37m$Host\033[1;31m) \033[1;37m- \033[1;32mAlterar \033[1;31m? \033[1;33m[s/n]:\033[1;37m "; read oprc
		[[ "$oprc" = @(s|S) ]] && {
			fun_edithost
		} || {
			fun_geraovpn
		}
		gerarovpn() {
			[[ ! -e "/root/$username.zip" ]] && {
				zip /root/$username.zip /root/$username.ovpn
				sleep 1.5
			}
		}
		clear
		echo -e "\E[44;1;37m       CONTA SSH CRIADA !      \E[0m"
		echo -e "\n\033[1;32mIP: \033[1;37m$IP"
		echo -e "\033[1;32mUsuário: \033[1;37m$username"
		echo -e "\033[1;32mSenha: \033[1;37m$password"
		echo -e "\033[1;32mExpira em: \033[1;37m$gui"
		echo -e "\033[1;32mLimite de conexões: \033[1;37m$sshlimiter"
		sleep 1
